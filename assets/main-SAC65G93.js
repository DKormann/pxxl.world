import{W as D,a as E}from"./scripting-DaceTLTX.js";let x=window.location.hostname==="localhost"?"http://localhost:5000":"https://zmanifold.com";const g=document.querySelector("#app");function S(e){const t=document.createElement("button");return t.innerText=e,g.appendChild(t),t}const m=S("Show Code"),b=S("Reset Player"),v=document.createElement("span");g.appendChild(v);v.textContent=" ping: 0ms";const c=document.createElement("canvas"),C=Math.min(window.innerWidth,window.innerHeight)-m.clientHeight-10;c.width=C;c.height=C;g.appendChild(c);const f=c.getContext("2d"),r=new D("player",{position:{x:0,y:0},energy:0,id:"0"}),L=document.addEventListener.bind(document),h=[];let l=0;document.addEventListener=function(e,t){console.log("adding event listener",e,l),h.push({type:e,listener:t}),L(e,t)};function M(){h.forEach(e=>{const{type:t,listener:n}=e;console.log("removing event listener",t,l),document.removeEventListener(t,n)}),h.length=0}function W(e){M(),l++,console.log("loading script",l),console.log("script",e),new Function("action","state","player",e)(u,p,r.value)}m.onclick=()=>{window.location.href="/code"};L("keyup",e=>{e.key==="Escape"&&m.click()});const w=100,s=c.width/w;function N(e,t,n){f.fillStyle=n,f.fillRect(e*s,t*s,s,s)}let O=Array.from({length:w},()=>Array.from({length:w},()=>"red"));const p={player:r.value,world:O};r.subscribe(e=>{p.player=e});function R(){f.clearRect(0,0,c.width,c.height),p.world.forEach((e,t)=>e.forEach((n,y)=>{n!==null&&N(t,y,n)}))}let i=new WebSocket(x.replace("http","ws").replace("https","wss")+"/ws");console.log("connecting to",i.url);const a=new Map;let k=17;function d(){console.log("reloading player"),u({action:"put",x:0,y:0,player_id:"44"}).then(e=>{r.set(e),W(E.value)}).catch(e=>{console.error("error",e)})}b.onclick=()=>{d(),b.onkeydown=e=>e.preventDefault()};r.value.id==="0"&&d();setInterval(()=>{r.value.energy<100&&(r.value.energy=Math.min(r.value.energy+100/20,100))},1e3/20);function u(e,t=r.value){e.player_id===void 0&&(e.player_id=t.id);const n=k++;if(e.action_id=n,typeof e.player_id!="string")throw new Error("player_id must be a string");return e.action_id===void 0&&(e.action_id=k++),new Promise((y,z)=>{const _=o=>{o.id==t.id&&(t.position=o.position,t.energy=o.energy)};a.set(n,{resolve:o=>{_(o),y(o)},reject:(o,P)=>{_(o),z(P)},timestamp:Date.now()});try{if(i.send(JSON.stringify(e)),i.readyState!==i.OPEN)throw new Error("websocket not open")}catch(o){i.close(),console.error("error",o),i=new WebSocket(x.replace("http","ws").replace("https","wss")+"/ws"),a.clear()}e.action==="put"&&e.energy&&u({action:"info"},t)})}i.onmessage=e=>{let t;try{t=JSON.parse(e.data)}catch{console.error("error parsing",e.data);return}if(t.message_type==="world_update")p.world=t.content.blocks,R();else if(t.message_type==="action_response"){let n=a.get(t.action_id);n?t.error?n.reject(t.content,t.error):n.resolve(t.content):(console.error("action not found",t.action_id),console.log(t.error))}else if(t.message_type==="ack"){const n=a.get(t.action_id);n&&(v.textContent=" ping: "+(Date.now()-n.timestamp)+"ms")}else console.error("unknown message type",t)};i.onopen=()=>{try{const e=r.value.position;u({action:"move",x:e.x,y:e.y,endx:e.x,endy:e.y}).catch(t=>{t==="player not found"&&d(),t!=="block already exists"&&console.error("error",t)})}catch(e){console.error("error",e),d()}W(E.value)};
