import{W as C,a as m}from"./scripting-DaceTLTX.js";let b=window.location.hostname==="localhost"?"http://localhost:5000":"https://zmanifold.com";const k=document.querySelector("#app");function E(e){const t=document.createElement("button");return t.innerText=e,k.appendChild(t),t}const w=E("Show Code"),M=E("Reset Player"),c=document.createElement("canvas"),x=Math.min(window.innerWidth,window.innerHeight)-w.clientHeight-10;c.width=x;c.height=x;k.appendChild(c);const y=c.getContext("2d"),r=new C("player",{position:{x:0,y:0},energy:0,id:"0"}),S=document.addEventListener.bind(document),f=[];let s=0;document.addEventListener=function(e,t){console.log("adding event listener",e,s),f.push({type:e,listener:t}),S(e,t)};function P(){f.forEach(e=>{const{type:t,listener:n}=e;console.log("removing event listener",t,s),document.removeEventListener(t,n)}),f.length=0}function L(e){P(),s++,console.log("loading script",s),console.log("script",e),new Function("action","state","player",e)(u,d,r)}w.onclick=()=>{window.location.href="/code"};S("keyup",e=>{e.key==="Escape"&&w.click()});const h=100,l=c.width/h;function R(e,t,n){y.fillStyle=n,y.fillRect(e*l,t*l,l,l)}let j=Array.from({length:h},()=>Array.from({length:h},()=>"red"));const d={player:r.value,world:j};r.subscribe(e=>{d.player=e});function q(){y.clearRect(0,0,c.width,c.height),d.world.forEach((e,t)=>e.forEach((n,p)=>{n!==null&&R(t,p,n)}))}let i=new WebSocket(b.replace("http","ws").replace("https","wss")+"/ws");console.log("connecting to",i.url);const g=new Map;let _=17;function a(){console.log("reloading player"),u({action:"put",x:0,y:0,player_id:"44"}).then(e=>{r.set(e),L(m.value)}).catch(e=>{console.error("error",e)})}M.onclick=a;r.value.id==="0"&&a();setInterval(()=>{r.value.energy<100&&(r.value.energy=Math.min(r.value.energy+100/20,100))},1e3/20);function u(e,t=r.value){e.player_id===void 0&&(e.player_id=t.id);const n=_++;if(e.action_id=n,typeof e.player_id!="string")throw new Error("player_id must be a string");return e.action_id===void 0&&(e.action_id=_++),new Promise((p,W)=>{const v=o=>{o.id==t.id&&(t.position=o.position,t.energy=o.energy)};g.set(n,{resolve:o=>{v(o),p(o)},reject:(o,z)=>{v(o),W(z)}});try{i.send(JSON.stringify(e))}catch(o){i.close(),console.error("error",o),i=new WebSocket(b.replace("http","ws").replace("https","wss")+"/ws"),g.clear()}e.action==="put"&&e.energy&&u({action:"info"},t)})}i.onmessage=e=>{let t;try{t=JSON.parse(e.data)}catch{console.error("error parsing",e.data);return}if(t.message_type==="world_update")d.world=t.content.blocks,q();else if(t.message_type==="action_response"){let n=g.get(t.action_id);n?t.error?n.reject(t.content,t.error):n.resolve(t.content):(console.error("action not found",t.action_id),console.log(t.error))}else console.error("unknown message type",t)};i.onopen=()=>{try{const e=r.value.position;u({action:"move",x:e.x,y:e.y,endx:e.x,endy:e.y}).catch(t=>{t==="player not found"&&a(),t!=="block already exists"&&console.error("error",t)})}catch(e){console.error("error",e),a()}L(m.value)};
